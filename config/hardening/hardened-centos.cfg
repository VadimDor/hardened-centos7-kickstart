# SCAP and SSG Security Guide OSPP/USGCB profile kickstart for CentOS 7
# Version: 0.0.2
# This script was mostly contributed from  by Frank Caviggia
# Last update was 13 May 2017
#
# Author: Frank Caviggia <fcaviggia@gmail.com>
# Copyright: Frank Caviggia, (c) 2016
# Version: 1.0
# License: GPLv2
# Description: Installation of Hardened CentOS 7 using SSG
# Based on:
# http://fedoraproject.org/wiki/Anaconda/Kickstart
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html
# http://usgcb.nist.gov/usgcb/content/configuration/workstation-ks.cfg

###############################################################################

#%include !please_edit_me

###############################################################################
# Kickstart Configuration
###############################################################################
# Install a fresh new system (optional)
install
# Specify installation method to use for installation
# To use a different one comment out the 'url' one below, update
# the selected choice with proper options & un-comment it
#
# Install from an installation tree on a remote server via FTP or HTTP:
# --url		the URL to install from
#
# Example:
#
# url --url=http://192.168.122.1/image
#
# Modify concrete URL in the above example appropriately to reflect the actual
# environment machine is to be installed in
#
# Other possible / supported installation methods:
# * install from the first CD-ROM/DVD drive on the system:
#
# cdrom
#
# * install from a directory of ISO images on a local drive:
#
# harddrive --partition=hdb2 --dir=/tmp/install-tree
#
# * install from provided NFS server:
#
# nfs --server=<hostname> --dir=<directory> [--opts=<nfs options>]
# e.g. :
#repo --name=base --baseurl="http://mirrors.kernel.org/centos/7/os/x86_64/"
#url --url="http://mirrors.kernel.org/centos/7/os/x86_64/"

repo --name=base --baseurl="http://centos.mirrors.ovh.net/ftp.centos.org/7/os/x86_64/"
url --url="http://centos.mirrors.ovh.net/ftp.centos.org/7/os/x86_64/"

# Set language to use during installation and the default language to use on the installed system (required)
lang @@locale@@
# Set system keyboard type / layout (required)
keyboard @@keyboard@@

# Configure network information for target system and activate network devices in the installer environment (optional)
# --onboot	enable device at a boot time
# --device	device to be activated and / or configured with the network command
# --bootproto	method to obtain networking configuration for device (default dhcp)
# --noipv6	disable IPv6 on this device
#
# NOTE: Usage of DHCP will fail CCE-27021-5 (DISA FSO RHEL-06-000292). To use static IP configuration,
#       "--bootproto=static" must be used. For example:
# network --bootproto=static --ip=10.0.2.15 --netmask=255.255.255.0 --gateway=10.0.2.254 --nameserver 192.168.2.1,192.168.3.1
#
network --onboot yes --device $@@eth@@ --bootproto dhcp --hostname=@@host_name@@ --ipv6=$@@ip6@@

# control installation via SSH (e.g. to pipe VNC through SSH) as user root and temporal password "mypwd"
sshpw --user=root mypwd

# Set the system's root password (required)
# Plaintext password is: up to user,
# default was "server" $6$rhel6usgcb$aS6oPGXcPKp3OtFArSrhRwu6sN8q2.yEGY7AIwDOQd23YCtiz9c5mXbid1BzX9bmXTEZi.hCzTEXFosVBI5ng0
# Refer to e.g. http://fedoraproject.org/wiki/Anaconda/Kickstart#rootpw to see how to create
# encrypted password form for different plaintext password
rootpw --iscrypted @@system_root@@
#sa----1 $6$My--Sault$.U42IxjlSmU1oBH2a65x2UQvmzc4/V45CPXoSrDOWxZ63esV0GLW8L6lh3WBuj9S6RTkFnOh4ibWFUzMpHvpl/


# The selected profile will restrict root login
# Add a user that can login and escalate privileges
# Plaintext password is: up to user,
# default was admin123 $6$Ga6ZnIlytrWpuCzO$q0LqT1USHpahzUafQM9jyHCY9BiE5/ahXLNWUMiVQnFGblu0WWGZ1e6icTaCGO4GNgZNtspp1Let/qpM7FMVB0
#rak---20-----   $6$My--Sault$ZQjlvuWvLqble5OoWoMyq0vTrQ1srf3cU.PltCB0eB8G25wVRGOP5AiCG1qxyef6m65qT6GntAc/S7OV0xIBI0
user --name=admin --groups=wheel --password=@@user_admin@@ --iscrypted

# Configure firewall settings for the system (optional)
# --enabled	reject incoming connections that are not in response to outbound requests
# --ssh		allow sshd service through the firewall
firewall --enabled --ssh

irewall-cmd  --permanent --add-service=ssh
firewall-cmd  --reload
restorecon -Rv ~/.ssh

# Set up the authentication options for the system (required)
# --enableshadow	enable shadowed passwords by default
# --passalgo		hash / crypt algorithm for new passwords
# See the manual page for authconfig for a complete list of possible options.
authconfig --enableshadow --passalgo=sha512
# State of SELinux on the installed system (optional)
# Defaults to enforcing
selinux --enforcing


########################################
services --enabled=NetworkManager,sshd
eula --agreed
#ignoredisk --only-use=vda
# Perform installation in text mode.
text
# Run the Setup Agent on first boot
firstboot --disable
#################################


# Set the system time zone (required)
timezone --utc Europe/Moscow
#################################
# Specify how the bootloader should be installed (required)
# Plaintext password is: up to user,
# default was password  $6$rhel6usgcb$kOzIfC4zLbuo3ECp1er99NRYikN419wxYMmons8Vm/37Qtg0T8aB9dKxHwqapz8wWAFuVkuI/UJqQBU92bA5C0
# User is always root.
# Refer to e.g. http://fedoraproject.org/wiki/Anaconda/Kickstart#rootpw to see how to create
# encrypted password form for different plaintext password
#rak--20---   6$My--Sault$ZQjlvuWvLqble5OoWoMyq0vTrQ1srf3cU.PltCB0eB8G25wVRGOP5AiCG1qxyef6m65qT6GntAc/S7OV0xIBI0
bootloader --location=mbr --append="crashkernel=auto rhgb quiet" --password=@@bootuser@@

# Initialize (format) all disks (optional)
zerombr

# The following partition layout scheme assumes disk of size 8GB or larger
# Modify size of partitions appropriately to reflect actual machine's hardware
#
# Remove Linux partitions from the system prior to creating new ones (optional)
# --linux	erase all Linux partitions
# --initlabel	initialize the disk label to the default based on the underlying architecture
clearpart --linux --initlabel

# Create primary system partitions (required for installs)
part /boot --fstype=xfs --size=@@boot_partition@@
part pv.01 --grow --size=200

# Create a Logical Volume Management (LVM) group (optional)
volgroup VolGroup --pesize=4096 pv.01

# Create EFI-boot partition (optional)
part /boot/efi --fstype=efi --size=@@efi_partition@@

# Create particular logical volumes (optional)
logvol / --fstype=xfs --name=lv_root --vgname=VolGroup --size=@@root_partition@@ --grow
# CCE-26557-9: Ensure /home Located On Separate Partition and CIS 1.1.9-1.1.0
logvol /home --fstype=xfs --name=lv_home --vgname=VolGroup --size=@@home_partition@@ --fsoptions="nodev"
# CCE-26435-8: Ensure /tmp Located On Separate Partition and  CIS 1.1.1-1.1.4
logvol /tmp --fstype=xfs --name=lv_tmp --vgname=VolGroup --size=@@tmp_partition@@ --fsoptions="nodev,noexec,nosuid"
# CCE-26639-5: Ensure /var Located On Separate Partition and CIS 1.1.5
logvol /var --fstype=xfs --name=lv_var --vgname=VolGroup --size=@@var_partition@@ --fsoptions="nodev"
# CCE-26215-4: Ensure /var/log Located On Separate Partition and CIS 1.1.7
logvol /var/log --fstype=xfs --name=lv_log --vgname=VolGroup --size=@@log_partition@@ --fsoptions="nodev"
# CCE-26436-6: Ensure /var/log/audit Located On Separate Partition and CIS 1.1.8
logvol /var/log/audit --fstype=xfs --name=lv_audit --vgname=VolGroup --size=@@audit_partition@@ --fsoptions="nodev"
logvol swap --fstype=swap --name=lv_swap --vgname=VolGroup --size=@@swap_partition@@
# optional
logvol /www --fstype=xfs --name=lv_www --vgname=VolGroup --size=@@www_partition@@ --fsoptions="nodev"

%addon org_fedora_oscap
        content-type = scap-security-guide
        profile = ospp-rhel7-server
%end

# Include hardening with kickstart options
#%include /tmp/hardening
#%include /tmp/networking

###############################################################################
# Package Selection (%packages section is required)
###############################################################################
%packages --ignoremissing
# MINIMUM
@core
@@@locale_name@@-support
# Install selected additional packages (required by profile)
setroubleshoot-server
iputils
net-tools
ntpdate
parted
vim-enhanced
wget
%include /tmp/fips-packages
logwatch
scrub
# CCE-27024-9: Install AIDE
aide 				# CIS 1.3.1
vlock
screen
chrony
sendmail
mailx
vixie-cron
cronie-noanacron
crontabs
logrotate
tmpwatch
at
ntp				# CIS 3.6
tcp_wrappers			# CIS 4.5.1
rsyslog				# CIS 5.1.1
cronie-anacron			# CIS 6.1.2
-setroubleshoot 		# CIS 1.4.4
-mcstrans	 		# CIS 1.4.5
-telnet 			# CIS 2.1.2
-rsh-server 			# CIS 2.1.3
-rsh				# CIS 2.1.4
-ypbind				# CIS 2.1.5
-ypserv				# CIS 2.1.6
-tftp				# CIS 2.1.7
-tftp-server			# CIS 2.1.8
-talk				# CIS 2.1.9
-talk-server			# CIS 2.1.10
-xinetd				# CIS 2.1.11
-xorg-x11-server-common		# CIS 3.2
-avahi-daemon			# CIS 3.3
-cups				# CIS 3.4
-dhcp				# CIS 3.5
-openldap			# CIS 3.7
# Install libreswan package
libreswan
gnupg2
yum-utils
tpm-tools
trousers
which
unzip
bzip2
zip
deltarpm
prelink
# SmartCard support disabled
#pam_pkcs11 pcsc-lite ccid coolkey
# SCAP CONTENT
openscap
openscap-utils
xml-common
# OPTIONAL
mutt
openssh-clients
cryptsetup-luks
# Kerberos   disabled
#krb5-libs krb5-workstation pam_krb5
virt-what
dos2unix
unix2dos
xz
# REMOVE PACKAGES
-abrt*
-avahi*
-iwl*
-ivtv-firmware
# ADDITIONAL PACKAGE SELECTION
%include /tmp/hardening-packages

%end # End of %packages section

BUILDDATE=$(date +%Y%m%d)
NAME="CentOS 7"
DOCS="https://www.centos.org



###############################################################################
# Pre-Installation Scripts
###############################################################################
%pre
#!/bin/bash

# Create Configurations
/bin/touch /tmp/hardening
/bin/touch /tmp/partitioning
/bin/touch /tmp/networking
/bin/touch /tmp/hardening-packages
/bin/touch /tmp/hardening-post
/bin/touch /tmp/hardening-post-nochroot
/bin/touch /tmp/fips-packages


%end

###############################################################################
# Post-Installation Scripts (nochroot)
###############################################################################
%post --nochroot  --log=/root/postinstall-nochroot.log
#!/bin/bash

# Create Directory
mkdir -p /mnt/sysimage/root/hardening

# Copy Shell Scripts from Install media to root
cp /run/install/repo/hardening/*sh /mnt/sysimage/root/hardening/
cp /run/install/repo/hardening/*rpm /mnt/sysimage/root/hardening/



###############################################################################
# Custom Post-Installation Scripts (nochroot)
###############################################################################
%include /tmp/hardening-post-nochroot

%end

###############################################################################
# Post-Installation Scripts
###############################################################################
%post
#!/bin/bash

# Install Hardening Script
yum localinstall -y /root/hardening/*cap-*.rpm



###############################################################################
# Additional Hardening Supplemental to SSG
###############################################################################
%include /boot/supplemental.sh

###############################################################################
# Generate SSH Host Keys - Highest Possible Encryption
##############################################################################
ssh-keygen -b 4096 -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
ssh-keygen -b 1024 -t dsa -N "" -f /etc/ssh/ssh_host_dsa_key
ssh-keygen -b 521 -t ecdsa -N "" -f /etc/ssh/ssh_host_ecdsa_key

# Fix grub.cfg permissions
chmod 600 /boot/grub2/grub2.cfg

# SSG TMOUT Fix (set in /etc/profile.d/autologout.{sh,csh})
/usr/bin/sed -i '/TMOUT/d' /etc/profile

# SSG SSH Fix
/usr/bin/sed -i 's/sha1Cipher/sha1\nCipher/' /etc/ssh/sshd_config
/usr/bin/sed -i 's/sha1Protocol/sha1\nProtocol/' /etc/ssh/sshd_config

# Clean Up
rm -rf /root/hardening
# rc.local
chmod +x /etc/rc.local
cat << EOF >> /root/clean_up.sh
#!/bin/bash
########################################
# Delete Anaconda Kickstart
########################################
#delete_me rm -f /root/*ks.cfg

########################################
# Disable Pre-Linking
# CCE-27078-5
########################################
/usr/bin/sed -i 's/PRELINKING.*/PRELINKING=no/g' /etc/sysconfig/prelink
/bin/chattr +i /etc/sysconfig/prelink
/usr/sbin/prelink -ua &> /dev/null

# Fix SSHD Host Key Permissions
chmod 0600 /etc/ssh/*_key

sed -i '/clean_up.sh/d' /etc/rc.local
rm -f /root/clean_up.sh

exit 0

EOF
chmod 500 /root/clean_up.sh
echo "/root/clean_up.sh" >> /etc/rc.local
cat << EOF >> /etc/rc.local
########################################
# Disable Radios (wifi, wimax, wwwan)
# NIST 800-53: SC-40, AC-18
########################################
nmcli radio all off

EOF


# SCAP Complience Report
cat << EOF >> /root/scap_generate_report.sh
#!/bin/bash
########################################
# Create SSG Complience Report
########################################
oscap xccdf eval --profile stig-rhel7-disa --results $(hostname)-scap-report-$(date +%Y%m%d).xml --report $(hostname)-scap-report-$(date +%Y%m%d).html --cpe /usr/share/xml/scap/ssg/content/ssg-rhel7-cpe-dictionary.xml /usr/share/xml/scap/ssg/content/ssg-centos7-xccdf.xml

exit 0

EOF
chmod 500 /root/scap_generate_report.sh

# SCAP Redmediation Script
cat << EOF >> /root/scap_remediate_system.sh
#!/bin/bash
########################################
# SCAP Security Guide Remediation Script
########################################

# Variable Initialization
FIPS=0
NOUSB=0

# Check for FIPS Mode
if [ \$(grep -c 'fips' /etc/default/grub) -gt 0 ]; then
	FIPS=1
fi
# Check for nousb Kernel
if [ \$(grep -c 'nousb' /etc/default/grub) -gt 0 ]; then
	NOUSB=1
fi

oscap xccdf eval --profile stig-rhel7-disa --results $(hostname)-scap-remediation-report-$(date +%Y%m%d).xml --remediate --cpe /usr/share/xml/scap/ssg/content/ssg-rhel7-cpe-dictionary.xml /usr/share/xml/scap/ssg/content/ssg-centos7-xccdf.xml

if [ \$NOUSB -eq 0 ]; then
	grubby --update-kernel=ALL --remove-args='nousb'
	/usr/bin/sed -i 's/ nousb//' /etc/default/grub
fi
if [ \$FIPS -eq 0 ]; then
	grubby --update-kernel=ALL --remove-args='fips=1'
	/usr/bin/sed -i 's/ fips=1//' /etc/default/grub
fi

# Remove TMOUT variable (set in /etc/profile.d/autologout.{sh,csh})
/usr/bin/sed -i '/TMOUT/d' /etc/profile

exit 0

EOF
chmod 500 /root/scap_remediate_system.sh

# Clean Yum
yum clean all &> /dev/null

########################################
# AIDE Initialization     	# CIS 1.3.1
########################################
#FIPS MODE AIDE CONFIGURATION
/usr/bin/sed -i -e 's/^FIPSR.*/FIPSR = p+i+n+u+g+s+m+c+acl+selinux+xattrs+sha256/' -e 's/^NORMAL.*/NORMAL = FIPSR+sha512/' /etc/aide.conf
# AIDE Initialization
echo "Initializing AIDE database, this step may take quite a while!"
/usr/sbin/aide --init &> /dev/null
echo "AIDE database initialization complete."
cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
# Weekly Reports
cat <<EOF > /etc/cron.weekly/aide-report
#!/bin/sh
# Generate Weekly AIDE Report
\`/usr/sbin/aide --check | tee -a /var/log/aide/reports/\$(hostname)-aide-report-\$(date +%Y%m%d).txt | /bin/mail -s "\$(hostname) - AIDE Integrity Check" root@localhost\`
EOF
chown root:root /etc/cron.weekly/aide-report
chmod 555 /etc/cron.weekly/aide-report
mkdir -p /var/log/aide/reports
chmod 700 /var/log/aide/reports

#echo "0 5 * * * /usr/sbin/aide --check" >> /var/spool/cron/root
##Initialise last so it doesn't pick up changes made by the post-install of the KS
#/usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
firewall-cmd --set-default-zone public
## Build date used for motd and product file
# Create MOTD
echo "Creating /etc/motd"
mv /etc/motd /etc/motd-backup
cat << MOTD > /etc/motd
      |\      _,,,---,,_	Instance ($NAME $BUILDDATE)
ZZZzz /,`.-'`'    -.  ;-;;,_
     |,4-  ) )-,_. ,\ (  `'-'		$DOCS
    '---''(_/--'  `-'\_) fL
MOTD
# MOTD symlinks
echo "Creating /etc/motd symlinks"
ln -sf /etc/motd /etc/issue
ln -sf /etc/motd /etc/issue.net
# Create product file
echo "Creating /etc/product file"
cat << PRODUCT > /etc/product
Name: CIS-conform setup
Image: $NAME $BUILDDATE
Documentation: $DOCS
Description: $NAME 64-bit image CIS conform
PRODUCT
# Make sure we have the latest security updates
echo "Updating packages"
/usr/bin/yum clean all
/usr/bin/yum update -y
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7	# CIS 1.2.1

systemctl enable firewalld			# CIS 4.7
systemctl enable rsyslog			# CIS 5.1.2
systemctl enable auditd				# CIS 5.2.2
systemctl enable crond				# CIS 6.1.2
# Set bootloader password				# CIS 1.5.3
#bootuser/rak--2-- grub.pbkdf2.sha512.10000.22756543CBD41FDDCBE3A0F6173B82B1D3A6067674D22892485C4C1B83EB82495968B8FEB853D97D634F19FB677ACF2E463A380B713ED3221EBB58F39E0C018A.A29315796BC79C674B07D3645C12447F9142E411059B695A47344DB374E885A481E07128CCE31D7DC7124AA0FA3D45AD254D7C0BACED3017033C6A515AD3BB82
cat << EOF2 >> /etc/grub.d/01_users
#!/bin/sh -e
cat << EOF
set superusers="bootuser"
password_pbkdf2 bootuser @@bootuser_grub@@
EOF
EOF2
sed -i s/'^GRUB_CMDLINE_LINUX="'/'GRUB_CMDLINE_LINUX="audit=1 '/ /etc/default/grub  # CIS 5.2.3
grub_cfg='/boot/grub2/grub.cfg'
grub2-mkconfig -o ${grub_cfg}
# Restrict Core Dumps					# CIS 1.6.1
echo \* hard core 0 >> /etc/security/limits.conf

for file in /extras/*
do
   chmod +x /extras/$file
  /extras/$file
done

%end
# Reboot after the installation is complete (optional)
# --eject	attempt to eject CD or DVD media before rebooting
reboot --eject
